#!/bin/tcsh -f

# Init config

set messageError = '\n\
How to use this program:\
	cpw-configureproject [-C , -c mode, -b, -e app1 app2 appn] -d directory \n\
	\n\
	`[-c, --configure] mode`			Prepare the CMake Build System. `mode` is release or debug \n\
	`[-b, --build]`						Execute the build system \n\
	`[-e, --execute] app1 app2 appn`	Execute in order the passed executables \n\
	`[-d, --dir] directory				Set the work directory \n\
	`[-C, --clean]`						Delete generated files \n\
'

if ( $#argv < 3 ) then
	echo $messageError
	exit 1
endif

# Variables
	set clean = 0
	set configure = 0
	set mode = ""
	set build = 0
	set execute = 0
	set directory = 0
	set gdb = 0
	set workDirectory = ""
	set exes = ""

# See parameters
	foreach param($argv)
		switch ($param)
			case "-C":
				echo "- Clean option passed"
				@ clean = 1
				exit 0
			breaksw
			case "-c":
				echo "- Configure option passed"
				@ configure = 1
			breaksw
			case "-b":
				echo "- Build option passed"
				@ build = 1
			breaksw
			case "-e":
				echo "- Execute option passed"
					@ execute = 1
				endif
			breaksw
			case "-d":
				@ directory = 1
			breaksw
			case "-gdb":
				@ gdb = 1
			breaksw
			default:
				if($directory) then
					@ directory = 0
					set workDirectory = $param
					echo "- Work directory: " $workDirectory
				else if ($configure) then
					set mode = $param
					#break
				else if ($execute) then
					set exes = "$exes $param"
				else
					echo "\nUnknown parameter."
					echo $messageError
					exit 1
				endif
			breaksw
			
		endsw
		
	end
	
# Directory
	if($workDirectory ==  "") then
		echo "\nDirectory not especified."
		echo $messageError
		exit 1
	endif
	
# Clean
	if($clean) then
		rm -rf "${workDirectory}/debug" "${workDirectory}/release" "${workDirectory}/mode.log"
	endif

# Configure
	if ($configure) then
		# Save mode
		echo $mode > "$workDirectory/mode.log"
		
		# Configure mode
		switch ($mode)
			case "debug":
				echo "- Configure: Debug mode"
				
				# CMake configure
				cmake -S $workDirectory -B "$workDirectory/debug" \
					-DCMAKE_BUILD_TYPE=Debug \
					-DCMAKE_CXX_FLAGS="-Wall -Wextra -g -O0"
					
				# Exit
				exit 0
			breaksw
			case "release":
				echo "- Configure: Release mode"
				
				# CMake configure
				cmake -S $workDirectory -B "$workDirectory/release" \
					-DCMAKE_BUILD_TYPE=Release \
					-DCMAKE_CXX_FLAGS="-O3"
				
				# Exit
				exit 0
			breaksw
			default:
				echo "\nMode not especified on configure."
				echo $messageError
				exit 1
			breaksw
		endsw
	endif
	
# Build system
	if ($build) then
		# See the build mode
		set mode = `cat ${workDirectory}/mode.log`
		
		# Build per mode
		switch ($mode)
			case "debug":
				echo "- Build: Debug mode. "
				cmake --build "$workDirectory/debug"
			breaksw
			case "release":
				echo "- Build: Release mode. "
				cmake --build "$workDirectory/release"
			breaksw
			default:
				echo "\nMode not especified on build."
				echo $messageError
				exit 1
			breaksw
		endsw
	endif

# Execute
	if ($execute == 1) then
	
		# See the build mode
		set mode = `cat ${workDirectory}/mode.log`
		if($mode == "") then
			echo "\nMode not especified on execute."
			echo $messageError
			exit 1
		endif
		
		# Execute every parameter
		foreach param($exes)
			echo "- Executing $param"
			#${workDirectory}/${mode}/${param}
		end
	endif
